{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\aldoh\\\\OneDrive\\\\Desktop\\\\rutgers\\\\homework\\\\FinalProject3\\\\finalproject3\\\\client\\\\src\\\\components\\\\RecipeCardComponenet.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport InstructionsComponent from \"./InstructionsComponent\";\n\nconst RecipeCardComponenet = ({\n  title,\n  image,\n  id\n}) => {\n  const [recipesInstructions, setRecipeInstructions] = useState([]);\n  const [query, setQuery] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const API_KEY = process.env.REACT_APP_SPOONACULAR_API_KEY;\n  useEffect(() => {\n    getRecipesInstructions();\n  }, [query]);\n\n  const getRecipesInstructions = async () => {\n    const response = await fetch(`https://api.spoonacular.com/recipes/${query}/information?includeNutrition=false&apiKey=${API_KEY}`);\n    const data = await response.json();\n    setRecipeInstructions(data);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(e.target.value);\n    handleShow();\n  };\n\n  return React.createElement(Card, {\n    style: {\n      width: '18rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    variant: \"top\",\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, title), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(Button, {\n    onClick: getSearch,\n    value: id,\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Get Recipe\")), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Instructions for: \", title)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(InstructionsComponent, {\n    instructions: recipesInstructions.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Save Changes\"))));\n};\n\nexport default RecipeCardComponenet;","map":{"version":3,"sources":["c:/Users/aldoh/OneDrive/Desktop/rutgers/homework/FinalProject3/finalproject3/client/src/components/RecipeCardComponenet.js"],"names":["React","useEffect","useState","Button","Card","Modal","InstructionsComponent","RecipeCardComponenet","title","image","id","recipesInstructions","setRecipeInstructions","query","setQuery","show","setShow","handleClose","handleShow","API_KEY","process","env","REACT_APP_SPOONACULAR_API_KEY","getRecipesInstructions","response","fetch","data","json","getSearch","e","preventDefault","target","value","width","instructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport InstructionsComponent from \"./InstructionsComponent\";\n\nconst RecipeCardComponenet = ({ title, image, id }) => {\n    const [recipesInstructions, setRecipeInstructions] = useState([])\n    const [query, setQuery] = useState('')\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const API_KEY = process.env.REACT_APP_SPOONACULAR_API_KEY;\n\n    useEffect(() => {\n        getRecipesInstructions();\n    }, [query]);\n\n    const getRecipesInstructions = async () => {\n        const response = await fetch(`https://api.spoonacular.com/recipes/${query}/information?includeNutrition=false&apiKey=${API_KEY}`);\n        const data = await response.json();\n        setRecipeInstructions(data);\n    }\n\n    const getSearch = e => {\n        e.preventDefault();\n        setQuery(e.target.value);\n        handleShow();\n    }\n\n    return (\n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={image} />\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <Card.Text>\n                        Some quick example text to build on the card title and make up the bulk of\n                        the card's content.\n                    </Card.Text>\n                    <Button onClick={getSearch} value={id} variant=\"primary\">Get Recipe</Button>\n                </Card.Body>\n\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Instructions for: {title}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <InstructionsComponent instructions={recipesInstructions.instructions} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n          </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Save Changes\n          </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card>\n\n    )\n}\nexport default RecipeCardComponenet;"]},"metadata":{},"sourceType":"module"}